{"version":3,"sources":["cljs_test_display/notify.cljs"],"mappings":";;;;AAKA,AAAKA,AAAa,AAAA,AAACC,AAASC;AAE5B,AAAA,AAAMC,AAAiBC,AAAKC;AAA5B,AACE,AAAML;AAAN,AACE,AAAM,AAACM,AAAEF,AAAK,AAAA,AAACH,AAASD;AAAxB,AACE,AAACK,AAAAA,AAAAA;;AADH;;;AADF;;;AAIF,AAAA,AAAME;AAAN,AACE,AAAA,AAAA,AAACJ;AAAD,AACG,AAAoBH;;;AAEzB,AAAKQ,AAAQ,AAAA,AAAA,AAACC;AACd,AAAKC,AAAU,AAAA,AAAA,AAACD;AAEhB,AAAA,AAAME;AAAN,AACE,AAAA,AAAA,AAACR;AAAD,AACG,AAAAS,AAAA,AAAA,AAAA,AAC6BF;;;AAElC,AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAuBM;AAAvB,AAAAF,AAAAJ,AAAA,AAA6BO;AAA7B,AACE,AAAA,AAAA,AAAClB;AAAD,AACG,AAAAS,AAAA,AAAA,AAAA,AAC6BJ,AAEA,AACC,AAAA,AAAA,AAAMa,AACJ,AAAA,AAAKA,AACP,AAAA,AAAA,AAAMD,AACJ,AAAA,AAAKA","names":["cljs-test-display.notify/notification","goog.object/get","js/goog.global","cljs-test-display.notify/with-permission","perm","thunk","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs-test-display.notify/ask-permission!","cljs-test-display.notify/red-url","cljs-test-display.favicon/color-data-url","cljs-test-display.notify/green-url","cljs-test-display.notify/success","js/Notification","p__40795","map__40797","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs-test-display.notify/failure","error","fail"],"sourcesContent":["(ns cljs-test-display.notify\n  (:require\n   [cljs-test-display.favicon :as favicon]\n   [goog.object :as gobj]))\n\n(def notification (gobj/get goog.global \"Notification\"))\n\n(defn with-permission [perm thunk]\n  (when notification\n    (when (= perm (gobj/get notification \"permission\"))\n      (thunk))))\n\n(defn ask-permission! []\n  (with-permission \"default\"\n    #(.requestPermission notification)))\n\n(def red-url (favicon/color-data-url \"#d00\" 512))\n(def green-url (favicon/color-data-url \"#0d0\" 512))\n\n(defn success []\n  (with-permission \"granted\"\n    #(js/Notification. \"All CLJS Tests Passed\"\n                       #js {:icon green-url :silent true})))\n\n(defn failure [{:keys [error fail]}]\n  (with-permission \"granted\"\n    #(js/Notification. \"CLJS Tests Failed\"\n                       #js {:icon red-url\n                            :silent true\n                            :body (str\n                                   (when fail\n                                     (str fail \" failures \"))\n                                   (when error\n                                     (str error \" errors\")))})))\n\n#_(success)\n#_(failure {})\n"]}