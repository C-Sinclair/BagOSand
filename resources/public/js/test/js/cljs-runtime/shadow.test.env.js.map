{"version":3,"sources":["shadow/test/env.cljs"],"mappings":";;AAOA,AAAA,AAAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAU,AAAA,AAAA,AAAA,AAACC;;AAEpB,AAAA,AAAMC,AAAkBC;AAAxB,AACE,AAAA,AAACC,AAAMJ,AAAUK,AAAkBF;;AAErC,AAAA,AAAMG;AAAN,AACE,AAAA,AAAAC,AAAA,AAACC,AAAKR;;AAER,AAAA,AAAMU,AAAkBC;AAAxB,AAAA,AACS,AAAAC,AAASD;AADlB;AAAA,AAAA,AAAA,AAAAF,AAAA;;;AAEE,AAAA,AAAAF,AAAA,AAAA,AAACM,AAAQb,AAAuBW;;AAElC;;;;AAAA,AAAMG;AAAN,AAIOd,AAAU,AAAA,AAAA,AAAAO,AAAc,AAACQ;;AAEhC,AAAA,AAAMC;AAAN,AACO,AAAAC,AAAA,AAAAC,AAEA,AAAA,AAAC4B,AAAOC;AAFR,AAAA,AAAA5B,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA65E4C,AAAAyB,AAAA9B;AA75E5CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAAA,AAAwBe;AAAxB,AAAApC,AAAAqB,AAAA,AAAcc;AAAd,AAAA,AAAA,AAAAT,AAAAR,AACE,AAACD,AAAMkB;;AADT,AAAA,AAAAf,AAAA;;;;AAAA;;;;;AAAA,AAAAO,AAAA,AAAAC,AAAAV,AAAA,AAAAW,AAAA,AAAAC,AAAApB;;AAAA,AAAAiB,AAAA,AAAAC,AAAAV,AAAA;;;AAAA,AAAAa,AAAA,AAAAC,AAAAtB;AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAR,AAAA,AAAAQ,AAAA,AAAA,AAAA,AAAA,AAAAP,AAAAC,AAAAM,AAAAA;AAAAA,AAAwBK;AAAxB,AAAApC,AAAA+B,AAAA,AAAcI;AAAd,AAAA,AAAAF,AAAA,AAAAJ,AAAA,AAAAK,AAAAxB,AACE,AAACO,AAAMkB;;;AADT;;;;AAAA,AAAA;;AAAA,AAAA,AAAA1B,AAAsCjB,AAAU,AAAA,AAAA,AAAAO,AAAc,AAACsC","names":["js/shadow","js/shadow.test","js/shadow.test.env","js/shadow.test.env.tests-ref","shadow.test.env/tests-ref","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","shadow.test.env/reset-test-data!","test-data","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","shadow.test.env/get-tests","cljs.core/deref","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/Error","shadow.test.env/get-test-ns-info","ns","cljs.core/Symbol","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","shadow.test.env/get-test-namespaces","cljs.core/keys","shadow.test.env/get-test-count","iter__4582__auto__","s__39997","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__39999","cljs.core/chunk-buffer","i__39998","map__40009","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__39996","cljs.core/chunk-rest","map__40015","cljs.core/first","cljs.core/cons","cljs.core/rest","vars","test-ns","cljs.core/vals","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.test.env\n  (:require-macros [shadow.test.env]))\n\n;; this should be how cljs.test works out of the box IMHO\n;; all those macros don't compose and make writing testing utilities painful\n;; (eg. you have to recompile the namespace containing the macro to pick up new tests)\n;; only the macros were replaced, the functionality remains unchanged\n(defonce tests-ref (atom {:namespaces {}}))\n\n(defn reset-test-data! [test-data]\n  (swap! tests-ref assoc :namespaces test-data))\n\n(defn get-tests []\n  (get @tests-ref :namespaces))\n\n(defn get-test-ns-info [ns]\n  {:pre [(symbol? ns)]}\n  (get-in @tests-ref [:namespaces ns]))\n\n(defn get-test-namespaces\n  \"returns all the registered test namespaces and symbols\n   use (get-test-ns-info the-sym) to get the details\"\n  []\n  (-> @tests-ref (:namespaces) (keys)))\n\n(defn get-test-count []\n  (->> (for [{:keys [vars] :as test-ns} (-> @tests-ref (:namespaces) (vals))]\n         (count vars))\n       (reduce + 0)))"]}